
Logic Phase:		BEFORE COMMIT(session=0x10a59d310)          						 - 2023-05-28 15:59:04,463 - logic_logger - DEBUG
Logic Phase:		ROW LOGIC(session=0x10a59d310) (sqlalchemy before_flush)			 - 2023-05-28 15:59:04,463 - logic_logger - INFO
..Order[10643] {Update - client} ShipZip: 12209, Id: 10643, CustomerId: ALFKI, EmployeeId: 6, OrderDate: 2013-08-25, RequiredDate: 2013-10-13, ShippedDate:  [None-->] 2013-10-13, ShipVia: 1, Freight: 29.4600000000, ShipName: Alfreds Futterkiste, ShipAddress: Obere Str. 57, ShipCity: Berlin, ShipRegion: Western Europe, ShipCountry: Germany, AmountTotal: 1086.00, Country: None, City: None, Ready: True, OrderDetailCount: 3, CloneFromOrder: None  row: 0x10a59e550  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,464 - logic_logger - INFO
....Customer[ALFKI] {Update - Adjusting Customer: Balance, UnpaidOrderCount} Id: ALFKI, CompanyName: Alfreds Futterkiste, ContactName: Maria Anders, ContactTitle: Sales Representative, Address: Obere Str. 57A, City: Berlin, Region: Western Europe, PostalCode: 12209, Country: Germany, Phone: 030-0074321, Fax: 030-0076545, Balance:  [2102.0000000000-->] 1016.0000000000, CreditLimit: 2300.0000000000, OrderCount: 15, UnpaidOrderCount:  [10-->] 9, Client_id: 1  row: 0x10a3ec790  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,465 - logic_logger - INFO
....OrderDetail[1040] {Update - Cascading Order.ShippedDate (,...)} Id: 1040, OrderId: 10643, ProductId: 28, UnitPrice: 45.6000000000, Quantity: 15, Discount: 0.25, Amount: 684.0000000000, ShippedDate: None  row: 0x10a570310  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,467 - logic_logger - INFO
....OrderDetail[1040] {Prune Formula: Amount [['UnitPrice', 'Quantity']]} Id: 1040, OrderId: 10643, ProductId: 28, UnitPrice: 45.6000000000, Quantity: 15, Discount: 0.25, Amount: 684.0000000000, ShippedDate: None  row: 0x10a570310  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,468 - logic_logger - INFO
....OrderDetail[1040] {Formula ShippedDate} Id: 1040, OrderId: 10643, ProductId: 28, UnitPrice: 45.6000000000, Quantity: 15, Discount: 0.25, Amount: 684.0000000000, ShippedDate:  [None-->] 2013-10-13  row: 0x10a570310  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,468 - logic_logger - INFO
......Product[28] {Update - Adjusting Product: UnitsShipped} Id: 28, ProductName: Rössle Sauerkraut, SupplierId: 12, CategoryId: 7, QuantityPerUnit: 25 - 825 g cans, UnitPrice: 45.6000000000, UnitsInStock: 26, UnitsOnOrder: 0, ReorderLevel: 0, Discontinued: 1, UnitsShipped:  [0-->] -15  row: 0x10a598550  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,469 - logic_logger - INFO
......Product[28] {Formula UnitsInStock} Id: 28, ProductName: Rössle Sauerkraut, SupplierId: 12, CategoryId: 7, QuantityPerUnit: 25 - 825 g cans, UnitPrice: 45.6000000000, UnitsInStock:  [26-->] 41, UnitsOnOrder: 0, ReorderLevel: 0, Discontinued: 1, UnitsShipped:  [0-->] -15  row: 0x10a598550  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,469 - logic_logger - INFO
....OrderDetail[1041] {Update - Cascading Order.ShippedDate (,...)} Id: 1041, OrderId: 10643, ProductId: 39, UnitPrice: 18.0000000000, Quantity: 21, Discount: 0.25, Amount: 378.0000000000, ShippedDate: None  row: 0x10a570150  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,470 - logic_logger - INFO
....OrderDetail[1041] {Prune Formula: Amount [['UnitPrice', 'Quantity']]} Id: 1041, OrderId: 10643, ProductId: 39, UnitPrice: 18.0000000000, Quantity: 21, Discount: 0.25, Amount: 378.0000000000, ShippedDate: None  row: 0x10a570150  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,470 - logic_logger - INFO
....OrderDetail[1041] {Formula ShippedDate} Id: 1041, OrderId: 10643, ProductId: 39, UnitPrice: 18.0000000000, Quantity: 21, Discount: 0.25, Amount: 378.0000000000, ShippedDate:  [None-->] 2013-10-13  row: 0x10a570150  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,470 - logic_logger - INFO
......Product[39] {Update - Adjusting Product: UnitsShipped} Id: 39, ProductName: Chartreuse verte, SupplierId: 18, CategoryId: 1, QuantityPerUnit: 750 cc per bottle, UnitPrice: 18.0000000000, UnitsInStock: 69, UnitsOnOrder: 0, ReorderLevel: 5, Discontinued: 0, UnitsShipped:  [0-->] -21  row: 0x10a598210  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,471 - logic_logger - INFO
......Product[39] {Formula UnitsInStock} Id: 39, ProductName: Chartreuse verte, SupplierId: 18, CategoryId: 1, QuantityPerUnit: 750 cc per bottle, UnitPrice: 18.0000000000, UnitsInStock:  [69-->] 90, UnitsOnOrder: 0, ReorderLevel: 5, Discontinued: 0, UnitsShipped:  [0-->] -21  row: 0x10a598210  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,471 - logic_logger - INFO
....OrderDetail[1042] {Update - Cascading Order.ShippedDate (,...)} Id: 1042, OrderId: 10643, ProductId: 46, UnitPrice: 12.0000000000, Quantity: 2, Discount: 0.25, Amount: 24.0000000000, ShippedDate: None  row: 0x10a570c50  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,472 - logic_logger - INFO
....OrderDetail[1042] {Prune Formula: Amount [['UnitPrice', 'Quantity']]} Id: 1042, OrderId: 10643, ProductId: 46, UnitPrice: 12.0000000000, Quantity: 2, Discount: 0.25, Amount: 24.0000000000, ShippedDate: None  row: 0x10a570c50  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,472 - logic_logger - INFO
....OrderDetail[1042] {Formula ShippedDate} Id: 1042, OrderId: 10643, ProductId: 46, UnitPrice: 12.0000000000, Quantity: 2, Discount: 0.25, Amount: 24.0000000000, ShippedDate:  [None-->] 2013-10-13  row: 0x10a570c50  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,473 - logic_logger - INFO
......Product[46] {Update - Adjusting Product: UnitsShipped} Id: 46, ProductName: Spegesild, SupplierId: 21, CategoryId: 8, QuantityPerUnit: 4 - 450 g glasses, UnitPrice: 12.0000000000, UnitsInStock: 95, UnitsOnOrder: 0, ReorderLevel: 0, Discontinued: 0, UnitsShipped:  [0-->] -2  row: 0x10a59bd90  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,473 - logic_logger - INFO
......Product[46] {Formula UnitsInStock} Id: 46, ProductName: Spegesild, SupplierId: 21, CategoryId: 8, QuantityPerUnit: 4 - 450 g glasses, UnitPrice: 12.0000000000, UnitsInStock:  [95-->] 97, UnitsOnOrder: 0, ReorderLevel: 0, Discontinued: 0, UnitsShipped:  [0-->] -2  row: 0x10a59bd90  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,474 - logic_logger - INFO
Logic Phase:		COMMIT(session=0x10a59d310)   										 - 2023-05-28 15:59:04,474 - logic_logger - INFO
..Order[10643] {Commit Event} ShipZip: 12209, Id: 10643, CustomerId: ALFKI, EmployeeId: 6, OrderDate: 2013-08-25, RequiredDate: 2013-10-13, ShippedDate:  [None-->] 2013-10-13, ShipVia: 1, Freight: 29.4600000000, ShipName: Alfreds Futterkiste, ShipAddress: Obere Str. 57, ShipCity: Berlin, ShipRegion: Western Europe, ShipCountry: Germany, AmountTotal: 1086.00, Country: None, City: None, Ready: True, OrderDetailCount: 3, CloneFromOrder: None  row: 0x10a59e550  session: 0x10a59d310  ins_upd_dlt: upd - 2023-05-28 15:59:04,475 - logic_logger - INFO

Rules Fired:		## - 2023-05-28 15:59:04,475 - logic_logger - INFO
  Customer		## - 2023-05-28 15:59:04,475 - logic_logger - INFO
    1. Derive Customer.Balance as Sum(Order.AmountTotal Where <function declare_logic.<locals>.<lambda> at 0x1099cf4c0>)		## - 2023-05-28 15:59:04,475 - logic_logger - INFO
    2. Derive Customer.UnpaidOrderCount as Count(<class 'database.models.Order'> Where <function declare_logic.<locals>.<lambda> at 0x109aeae80>)		## - 2023-05-28 15:59:04,475 - logic_logger - INFO
    3. Derive Customer.OrderCount as Count(<class 'database.models.Order'> Where None)		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    4. RowEvent Customer.customer_defaults() 		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
  Order		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    5. Derive Order.OrderDetailCount as Count(<class 'database.models.OrderDetail'> Where None)		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    6. Derive Order.AmountTotal as Sum(OrderDetail.Amount Where None)		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    7. RowEvent Order.clone_order() 		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    8. RowEvent Order.congratulate_sales_rep() 		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    9. RowEvent Order.order_defaults() 		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
  OrderDetail		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    10. RowEvent OrderDetail.order_detail_defaults() 		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    11. Derive OrderDetail.ShippedDate as Formula (2): row.Order.ShippedDate		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
  Product		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    12. Derive Product.UnitsInStock as Formula (1): <function>		## - 2023-05-28 15:59:04,476 - logic_logger - INFO
    13. Derive Product.UnitsShipped as Sum(OrderDetail.Quantity Where <function declare_logic.<locals>.<lambda> at 0x109aeaf20>)		## - 2023-05-28 15:59:04,476 - logic_logger - INFO

 - 2023-05-28 15:59:04,476 - logic_logger - INFO
Logic Phase:		FLUSH(session=0x10a59d310)   (sqlalchemy flush processing)       	 - 2023-05-28 15:59:04,476 - logic_logger - INFO

Logic Phase:		BEFORE COMMIT(session=0x10a59d310)          						 - 2023-05-28 15:59:04,483 - logic_logger - DEBUG

Logic Phase:		BEFORE COMMIT(session=0x10a59d310)          						 - 2023-05-28 15:59:04,483 - logic_logger - DEBUG

Logic Phase:		BEFORE COMMIT(session=0x10a58b690)          						 - 2023-05-28 15:59:04,518 - logic_logger - DEBUG

Logic Phase:		BEFORE COMMIT(session=0x10a58a210)          						 - 2023-05-28 15:59:04,567 - logic_logger - DEBUG
