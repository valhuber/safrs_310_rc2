
Logic Phase:		BEFORE COMMIT(session=0x10a589e50)          						 - 2023-05-28 15:59:04,336 - logic_logger - DEBUG
Logic Phase:		ROW LOGIC(session=0x10a589e50) (sqlalchemy before_flush)			 - 2023-05-28 15:59:04,336 - logic_logger - INFO
..Order[10643] {Update - client} ShipZip: 12209, Id: 10643, CustomerId: ALFKI, EmployeeId: 6, OrderDate: 2013-08-25, RequiredDate:  [2013-09-22-->] 2013-10-13 00:00:00, ShippedDate: None, ShipVia: 1, Freight: 29.4600000000, ShipName: Alfreds Futterkiste, ShipAddress: Obere Str. 57, ShipCity: Berlin, ShipRegion: Western Europe, ShipCountry: Germany, AmountTotal: 1086.00, Country: None, City: None, Ready: True, OrderDetailCount: 3, CloneFromOrder: None  row: 0x10a589c90  session: 0x10a589e50  ins_upd_dlt: upd - 2023-05-28 15:59:04,336 - logic_logger - INFO
Logic Phase:		COMMIT(session=0x10a589e50)   										 - 2023-05-28 15:59:04,337 - logic_logger - INFO
..Order[10643] {Commit Event} ShipZip: 12209, Id: 10643, CustomerId: ALFKI, EmployeeId: 6, OrderDate: 2013-08-25, RequiredDate:  [2013-09-22-->] 2013-10-13 00:00:00, ShippedDate: None, ShipVia: 1, Freight: 29.4600000000, ShipName: Alfreds Futterkiste, ShipAddress: Obere Str. 57, ShipCity: Berlin, ShipRegion: Western Europe, ShipCountry: Germany, AmountTotal: 1086.00, Country: None, City: None, Ready: True, OrderDetailCount: 3, CloneFromOrder: None  row: 0x10a589c90  session: 0x10a589e50  ins_upd_dlt: upd - 2023-05-28 15:59:04,338 - logic_logger - INFO

Rules Fired:		## - 2023-05-28 15:59:04,338 - logic_logger - INFO
  Customer		## - 2023-05-28 15:59:04,338 - logic_logger - INFO
    1. Derive Customer.Balance as Sum(Order.AmountTotal Where <function declare_logic.<locals>.<lambda> at 0x1099cf4c0>)		## - 2023-05-28 15:59:04,338 - logic_logger - INFO
    2. Derive Customer.UnpaidOrderCount as Count(<class 'database.models.Order'> Where <function declare_logic.<locals>.<lambda> at 0x109aeae80>)		## - 2023-05-28 15:59:04,338 - logic_logger - INFO
    3. Derive Customer.OrderCount as Count(<class 'database.models.Order'> Where None)		## - 2023-05-28 15:59:04,338 - logic_logger - INFO
  Order		## - 2023-05-28 15:59:04,338 - logic_logger - INFO
    4. RowEvent Order.clone_order() 		## - 2023-05-28 15:59:04,338 - logic_logger - INFO
    5. RowEvent Order.congratulate_sales_rep() 		## - 2023-05-28 15:59:04,338 - logic_logger - INFO
    6. RowEvent Order.order_defaults() 		## - 2023-05-28 15:59:04,338 - logic_logger - INFO

 - 2023-05-28 15:59:04,338 - logic_logger - INFO
Logic Phase:		FLUSH(session=0x10a589e50)   (sqlalchemy flush processing)       	 - 2023-05-28 15:59:04,339 - logic_logger - INFO

Logic Phase:		BEFORE COMMIT(session=0x10a589e50)          						 - 2023-05-28 15:59:04,344 - logic_logger - DEBUG

Logic Phase:		BEFORE COMMIT(session=0x10a589e50)          						 - 2023-05-28 15:59:04,344 - logic_logger - DEBUG

Logic Phase:		BEFORE COMMIT(session=0x10a58a010)          						 - 2023-05-28 15:59:04,379 - logic_logger - DEBUG

Logic Phase:		BEFORE COMMIT(session=0x10a5988d0)          						 - 2023-05-28 15:59:04,417 - logic_logger - DEBUG
