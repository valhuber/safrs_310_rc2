
Logic Phase:		BEFORE COMMIT(session=0x1068c9950)          						 - 2023-05-31 10:59:30,198 - logic_logger - DEBUG
Logic Phase:		ROW LOGIC(session=0x1068c9950) (sqlalchemy before_flush)			 - 2023-05-31 10:59:30,198 - logic_logger - INFO
..Order[10643] {Update - client} Id: 10643, CustomerId: ALFKI, EmployeeId: 6, OrderDate: 2013-08-25, RequiredDate:  [2013-10-13-->] 2013-10-13 00:00:00, ShippedDate: None, ShipVia: 1, Freight: 29.4600000000, ShipName: Alfreds Futterkiste, ShipAddress: Obere Str. 57, ShipCity: Berlin, ShipRegion: Western Europe, ShipZip: 12209, ShipCountry: Germany, AmountTotal: 1086.00, Country: None, City: None, Ready: True, OrderDetailCount: 3, CloneFromOrder: None  row: 0x106747e90  session: 0x1068c9950  ins_upd_dlt: upd - 2023-05-31 10:59:30,199 - logic_logger - INFO
Logic Phase:		COMMIT(session=0x1068c9950)   										 - 2023-05-31 10:59:30,200 - logic_logger - INFO
..Order[10643] {Commit Event} Id: 10643, CustomerId: ALFKI, EmployeeId: 6, OrderDate: 2013-08-25, RequiredDate:  [2013-10-13-->] 2013-10-13 00:00:00, ShippedDate: None, ShipVia: 1, Freight: 29.4600000000, ShipName: Alfreds Futterkiste, ShipAddress: Obere Str. 57, ShipCity: Berlin, ShipRegion: Western Europe, ShipZip: 12209, ShipCountry: Germany, AmountTotal: 1086.00, Country: None, City: None, Ready: True, OrderDetailCount: 3, CloneFromOrder: None  row: 0x106747e90  session: 0x1068c9950  ins_upd_dlt: upd - 2023-05-31 10:59:30,200 - logic_logger - INFO

Rules Fired:		## - 2023-05-31 10:59:30,200 - logic_logger - INFO
  Customer		## - 2023-05-31 10:59:30,200 - logic_logger - INFO
    1. Derive Customer.OrderCount as Count(<class 'database.models.Order'> Where None)		## - 2023-05-31 10:59:30,200 - logic_logger - INFO
    2. Derive Customer.UnpaidOrderCount as Count(<class 'database.models.Order'> Where <function declare_logic.<locals>.<lambda> at 0x105ef2020>)		## - 2023-05-31 10:59:30,200 - logic_logger - INFO
    3. Derive Customer.Balance as Sum(Order.AmountTotal Where <function declare_logic.<locals>.<lambda> at 0x105dbf7e0>)		## - 2023-05-31 10:59:30,200 - logic_logger - INFO
  Order		## - 2023-05-31 10:59:30,200 - logic_logger - INFO
    4. RowEvent Order.order_defaults() 		## - 2023-05-31 10:59:30,200 - logic_logger - INFO
    5. RowEvent Order.congratulate_sales_rep() 		## - 2023-05-31 10:59:30,200 - logic_logger - INFO
    6. RowEvent Order.clone_order() 		## - 2023-05-31 10:59:30,200 - logic_logger - INFO

 - 2023-05-31 10:59:30,200 - logic_logger - INFO
Logic Phase:		FLUSH(session=0x1068c9950)   (sqlalchemy flush processing)       	 - 2023-05-31 10:59:30,201 - logic_logger - INFO

Logic Phase:		BEFORE COMMIT(session=0x1068c9950)          						 - 2023-05-31 10:59:30,205 - logic_logger - DEBUG

Logic Phase:		BEFORE COMMIT(session=0x1068c9950)          						 - 2023-05-31 10:59:30,205 - logic_logger - DEBUG

Logic Phase:		BEFORE COMMIT(session=0x1068c9450)          						 - 2023-05-31 10:59:30,229 - logic_logger - DEBUG

Logic Phase:		BEFORE COMMIT(session=0x106728c90)          						 - 2023-05-31 10:59:30,257 - logic_logger - DEBUG
